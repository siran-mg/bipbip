// Mocks generated by Mockito 5.4.5 from annotations
// in ndao/test/mocks/mock_repositories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i9;
import 'dart:typed_data' as _i11;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:ndao/user/domain/entities/user_entity.dart' as _i2;
import 'package:ndao/user/domain/entities/vehicle_entity.dart' as _i3;
import 'package:ndao/user/domain/repositories/auth_repository.dart' as _i4;
import 'package:ndao/user/domain/repositories/storage_repository.dart' as _i10;
import 'package:ndao/user/domain/repositories/user_repository.dart' as _i7;
import 'package:ndao/user/domain/repositories/vehicle_repository.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserEntity_0 extends _i1.SmartFake implements _i2.UserEntity {
  _FakeUserEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeVehicleEntity_1 extends _i1.SmartFake implements _i3.VehicleEntity {
  _FakeVehicleEntity_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  @override
  _i5.Future<String> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signInWithEmailAndPassword, [email, password]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#signInWithEmailAndPassword, [
                  email,
                  password,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#signInWithEmailAndPassword, [
                  email,
                  password,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> signUpWithEmailAndPassword(
    String? givenName,
    String? familyName,
    String? email,
    String? phoneNumber,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUpWithEmailAndPassword, [
              givenName,
              familyName,
              email,
              phoneNumber,
              password,
            ]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#signUpWithEmailAndPassword, [
                  givenName,
                  familyName,
                  email,
                  phoneNumber,
                  password,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#signUpWithEmailAndPassword, [
                  givenName,
                  familyName,
                  email,
                  phoneNumber,
                  password,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> signUpDriverWithEmailAndPassword(
    String? givenName,
    String? familyName,
    String? email,
    String? phoneNumber,
    String? password,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUpDriverWithEmailAndPassword, [
              givenName,
              familyName,
              email,
              phoneNumber,
              password,
            ]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#signUpDriverWithEmailAndPassword, [
                  givenName,
                  familyName,
                  email,
                  phoneNumber,
                  password,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#signUpDriverWithEmailAndPassword, [
                  givenName,
                  familyName,
                  email,
                  phoneNumber,
                  password,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserEntity?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i5.Future<_i2.UserEntity?>.value(),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity?>.value(),
          )
          as _i5.Future<_i2.UserEntity?>);

  @override
  _i5.Future<bool> isAuthenticated() =>
      (super.noSuchMethod(
            Invocation.method(#isAuthenticated, []),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  @override
  _i5.Future<_i2.UserEntity> saveUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(this, Invocation.method(#saveUser, [user])),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(this, Invocation.method(#saveUser, [user])),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<_i2.UserEntity?> getUserById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [id]),
            returnValue: _i5.Future<_i2.UserEntity?>.value(),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity?>.value(),
          )
          as _i5.Future<_i2.UserEntity?>);

  @override
  _i5.Future<_i2.UserEntity> updateUser(_i2.UserEntity? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(this, Invocation.method(#updateUser, [user])),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(this, Invocation.method(#updateUser, [user])),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<bool> deleteUser(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [id]),
            returnValue: _i5.Future<bool>.value(false),
            returnValueForMissingStub: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<_i2.UserEntity> addRole(String? userId, String? role) =>
      (super.noSuchMethod(
            Invocation.method(#addRole, [userId, role]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#addRole, [userId, role]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#addRole, [userId, role]),
              ),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<_i2.UserEntity> removeRole(String? userId, String? role) =>
      (super.noSuchMethod(
            Invocation.method(#removeRole, [userId, role]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#removeRole, [userId, role]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#removeRole, [userId, role]),
              ),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<_i2.UserEntity> updateDriverDetails(
    String? userId,
    _i2.DriverDetails? driverDetails,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDriverDetails, [userId, driverDetails]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateDriverDetails, [
                  userId,
                  driverDetails,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateDriverDetails, [
                  userId,
                  driverDetails,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<_i2.UserEntity> updateClientDetails(
    String? userId,
    _i2.ClientDetails? clientDetails,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateClientDetails, [userId, clientDetails]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateClientDetails, [
                  userId,
                  clientDetails,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateClientDetails, [
                  userId,
                  clientDetails,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<_i2.UserEntity> updateDriverPosition(
    String? userId,
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDriverPosition, [
              userId,
              latitude,
              longitude,
            ]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateDriverPosition, [
                  userId,
                  latitude,
                  longitude,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateDriverPosition, [
                  userId,
                  latitude,
                  longitude,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<_i2.UserEntity> updateDriverAvailability(
    String? userId,
    bool? isAvailable,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDriverAvailability, [userId, isAvailable]),
            returnValue: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateDriverAvailability, [
                  userId,
                  isAvailable,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i2.UserEntity>.value(
              _FakeUserEntity_0(
                this,
                Invocation.method(#updateDriverAvailability, [
                  userId,
                  isAvailable,
                ]),
              ),
            ),
          )
          as _i5.Future<_i2.UserEntity>);

  @override
  _i5.Future<List<_i2.UserEntity>> getAvailableDrivers() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableDrivers, []),
            returnValue: _i5.Future<List<_i2.UserEntity>>.value(
              <_i2.UserEntity>[],
            ),
            returnValueForMissingStub: _i5.Future<List<_i2.UserEntity>>.value(
              <_i2.UserEntity>[],
            ),
          )
          as _i5.Future<List<_i2.UserEntity>>);
}

/// A class which mocks [VehicleRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVehicleRepository extends _i1.Mock implements _i8.VehicleRepository {
  @override
  _i5.Future<_i3.VehicleEntity> createVehicle({
    required String? driverId,
    required String? licensePlate,
    required String? brand,
    required String? model,
    required String? type,
    bool? isPrimary = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createVehicle, [], {
              #driverId: driverId,
              #licensePlate: licensePlate,
              #brand: brand,
              #model: model,
              #type: type,
              #isPrimary: isPrimary,
            }),
            returnValue: _i5.Future<_i3.VehicleEntity>.value(
              _FakeVehicleEntity_1(
                this,
                Invocation.method(#createVehicle, [], {
                  #driverId: driverId,
                  #licensePlate: licensePlate,
                  #brand: brand,
                  #model: model,
                  #type: type,
                  #isPrimary: isPrimary,
                }),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.VehicleEntity>.value(
              _FakeVehicleEntity_1(
                this,
                Invocation.method(#createVehicle, [], {
                  #driverId: driverId,
                  #licensePlate: licensePlate,
                  #brand: brand,
                  #model: model,
                  #type: type,
                  #isPrimary: isPrimary,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.VehicleEntity>);

  @override
  _i5.Future<_i3.VehicleEntity?> getVehicleById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getVehicleById, [id]),
            returnValue: _i5.Future<_i3.VehicleEntity?>.value(),
            returnValueForMissingStub: _i5.Future<_i3.VehicleEntity?>.value(),
          )
          as _i5.Future<_i3.VehicleEntity?>);

  @override
  _i5.Future<List<_i3.VehicleEntity>> getVehiclesForDriver(String? driverId) =>
      (super.noSuchMethod(
            Invocation.method(#getVehiclesForDriver, [driverId]),
            returnValue: _i5.Future<List<_i3.VehicleEntity>>.value(
              <_i3.VehicleEntity>[],
            ),
            returnValueForMissingStub:
                _i5.Future<List<_i3.VehicleEntity>>.value(
                  <_i3.VehicleEntity>[],
                ),
          )
          as _i5.Future<List<_i3.VehicleEntity>>);

  @override
  _i5.Future<_i3.VehicleEntity> updateVehicle(_i3.VehicleEntity? vehicle) =>
      (super.noSuchMethod(
            Invocation.method(#updateVehicle, [vehicle]),
            returnValue: _i5.Future<_i3.VehicleEntity>.value(
              _FakeVehicleEntity_1(
                this,
                Invocation.method(#updateVehicle, [vehicle]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<_i3.VehicleEntity>.value(
              _FakeVehicleEntity_1(
                this,
                Invocation.method(#updateVehicle, [vehicle]),
              ),
            ),
          )
          as _i5.Future<_i3.VehicleEntity>);

  @override
  _i5.Future<void> deleteVehicle(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteVehicle, [id]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setPrimaryVehicle(String? driverId, String? vehicleId) =>
      (super.noSuchMethod(
            Invocation.method(#setPrimaryVehicle, [driverId, vehicleId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String> uploadVehiclePhoto(String? vehicleId, _i9.File? photo) =>
      (super.noSuchMethod(
            Invocation.method(#uploadVehiclePhoto, [vehicleId, photo]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadVehiclePhoto, [vehicleId, photo]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadVehiclePhoto, [vehicleId, photo]),
              ),
            ),
          )
          as _i5.Future<String>);
}

/// A class which mocks [StorageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageRepository extends _i1.Mock implements _i10.StorageRepository {
  @override
  _i5.Future<String> uploadProfilePhoto(String? userId, _i9.File? photoFile) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProfilePhoto, [userId, photoFile]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadProfilePhoto, [userId, photoFile]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadProfilePhoto, [userId, photoFile]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<String> uploadProfilePhotoBytes(
    String? userId,
    _i11.Uint8List? photoBytes,
    String? fileExtension,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#uploadProfilePhotoBytes, [
              userId,
              photoBytes,
              fileExtension,
            ]),
            returnValue: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadProfilePhotoBytes, [
                  userId,
                  photoBytes,
                  fileExtension,
                ]),
              ),
            ),
            returnValueForMissingStub: _i5.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#uploadProfilePhotoBytes, [
                  userId,
                  photoBytes,
                  fileExtension,
                ]),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> deleteProfilePhoto(String? userId, {String? fileName}) =>
      (super.noSuchMethod(
            Invocation.method(
              #deleteProfilePhoto,
              [userId],
              {#fileName: fileName},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String?> getProfilePhotoUrl(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getProfilePhotoUrl, [userId]),
            returnValue: _i5.Future<String?>.value(),
            returnValueForMissingStub: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);
}
