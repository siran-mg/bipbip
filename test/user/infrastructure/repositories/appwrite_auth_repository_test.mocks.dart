// Mocks generated by Mockito 5.4.5 from annotations
// in ndao/test/user/infrastructure/repositories/appwrite_auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:appwrite/appwrite.dart' as _i5;
import 'package:appwrite/models.dart' as _i3;
import 'package:appwrite/src/client.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:ndao/core/infrastructure/storage/session_storage.dart' as _i8;
import 'package:ndao/user/domain/entities/user_entity.dart' as _i4;
import 'package:ndao/user/domain/repositories/user_repository.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUser_1 extends _i1.SmartFake implements _i3.User {
  _FakeUser_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeIdentityList_2 extends _i1.SmartFake implements _i3.IdentityList {
  _FakeIdentityList_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJwt_3 extends _i1.SmartFake implements _i3.Jwt {
  _FakeJwt_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLogList_4 extends _i1.SmartFake implements _i3.LogList {
  _FakeLogList_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePreferences_5 extends _i1.SmartFake implements _i3.Preferences {
  _FakePreferences_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeToken_6 extends _i1.SmartFake implements _i3.Token {
  _FakeToken_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSessionList_7 extends _i1.SmartFake implements _i3.SessionList {
  _FakeSessionList_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSession_8 extends _i1.SmartFake implements _i3.Session {
  _FakeSession_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUserEntity_9 extends _i1.SmartFake implements _i4.UserEntity {
  _FakeUserEntity_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [Account].
///
/// See the documentation for Mockito's code generation for more information.
class MockAccount extends _i1.Mock implements _i5.Account {
  MockAccount() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client =>
      (super.noSuchMethod(
            Invocation.getter(#client),
            returnValue: _FakeClient_0(this, Invocation.getter(#client)),
          )
          as _i2.Client);

  @override
  _i6.Future<_i3.User> get() =>
      (super.noSuchMethod(
            Invocation.method(#get, []),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#get, [])),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> create({
    required String? userId,
    required String? email,
    required String? password,
    String? name,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#create, [], {
              #userId: userId,
              #email: email,
              #password: password,
              #name: name,
            }),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#create, [], {
                  #userId: userId,
                  #email: email,
                  #password: password,
                  #name: name,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> updateEmail({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateEmail, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#updateEmail, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.IdentityList> listIdentities({String? queries}) =>
      (super.noSuchMethod(
            Invocation.method(#listIdentities, [], {#queries: queries}),
            returnValue: _i6.Future<_i3.IdentityList>.value(
              _FakeIdentityList_2(
                this,
                Invocation.method(#listIdentities, [], {#queries: queries}),
              ),
            ),
          )
          as _i6.Future<_i3.IdentityList>);

  @override
  _i6.Future<dynamic> deleteIdentity({required String? identityId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteIdentity, [], {#identityId: identityId}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i3.Jwt> createJWT() =>
      (super.noSuchMethod(
            Invocation.method(#createJWT, []),
            returnValue: _i6.Future<_i3.Jwt>.value(
              _FakeJwt_3(this, Invocation.method(#createJWT, [])),
            ),
          )
          as _i6.Future<_i3.Jwt>);

  @override
  _i6.Future<_i3.LogList> listLogs({List<String>? queries}) =>
      (super.noSuchMethod(
            Invocation.method(#listLogs, [], {#queries: queries}),
            returnValue: _i6.Future<_i3.LogList>.value(
              _FakeLogList_4(
                this,
                Invocation.method(#listLogs, [], {#queries: queries}),
              ),
            ),
          )
          as _i6.Future<_i3.LogList>);

  @override
  _i6.Future<_i3.User> updateName({required String? name}) =>
      (super.noSuchMethod(
            Invocation.method(#updateName, [], {#name: name}),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#updateName, [], {#name: name}),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> updatePassword({
    required String? password,
    String? oldPassword,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePassword, [], {
              #password: password,
              #oldPassword: oldPassword,
            }),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#updatePassword, [], {
                  #password: password,
                  #oldPassword: oldPassword,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.User> updatePhone({
    required String? phone,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhone, [], {
              #phone: phone,
              #password: password,
            }),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#updatePhone, [], {
                  #phone: phone,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.Preferences> getPrefs() =>
      (super.noSuchMethod(
            Invocation.method(#getPrefs, []),
            returnValue: _i6.Future<_i3.Preferences>.value(
              _FakePreferences_5(this, Invocation.method(#getPrefs, [])),
            ),
          )
          as _i6.Future<_i3.Preferences>);

  @override
  _i6.Future<_i3.User> updatePrefs({required Map<dynamic, dynamic>? prefs}) =>
      (super.noSuchMethod(
            Invocation.method(#updatePrefs, [], {#prefs: prefs}),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(
                this,
                Invocation.method(#updatePrefs, [], {#prefs: prefs}),
              ),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.Token> createRecovery({
    required String? email,
    required String? url,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createRecovery, [], {#email: email, #url: url}),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#createRecovery, [], {
                  #email: email,
                  #url: url,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.Token> updateRecovery({
    required String? userId,
    required String? secret,
    required String? password,
    required String? passwordAgain,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateRecovery, [], {
              #userId: userId,
              #secret: secret,
              #password: password,
              #passwordAgain: passwordAgain,
            }),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#updateRecovery, [], {
                  #userId: userId,
                  #secret: secret,
                  #password: password,
                  #passwordAgain: passwordAgain,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.SessionList> listSessions() =>
      (super.noSuchMethod(
            Invocation.method(#listSessions, []),
            returnValue: _i6.Future<_i3.SessionList>.value(
              _FakeSessionList_7(this, Invocation.method(#listSessions, [])),
            ),
          )
          as _i6.Future<_i3.SessionList>);

  @override
  _i6.Future<dynamic> deleteSessions() =>
      (super.noSuchMethod(
            Invocation.method(#deleteSessions, []),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i3.Session> createAnonymousSession() =>
      (super.noSuchMethod(
            Invocation.method(#createAnonymousSession, []),
            returnValue: _i6.Future<_i3.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#createAnonymousSession, []),
              ),
            ),
          )
          as _i6.Future<_i3.Session>);

  @override
  _i6.Future<_i3.Session> createEmailSession({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createEmailSession, [], {
              #email: email,
              #password: password,
            }),
            returnValue: _i6.Future<_i3.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#createEmailSession, [], {
                  #email: email,
                  #password: password,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Session>);

  @override
  _i6.Future<_i3.Token> createMagicURLSession({
    required String? userId,
    required String? email,
    String? url,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createMagicURLSession, [], {
              #userId: userId,
              #email: email,
              #url: url,
            }),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#createMagicURLSession, [], {
                  #userId: userId,
                  #email: email,
                  #url: url,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.Session> updateMagicURLSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMagicURLSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i3.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updateMagicURLSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Session>);

  @override
  _i6.Future<dynamic> createOAuth2Session({
    required String? provider,
    String? success,
    String? failure,
    List<String>? scopes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createOAuth2Session, [], {
              #provider: provider,
              #success: success,
              #failure: failure,
              #scopes: scopes,
            }),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i3.Token> createPhoneSession({
    required String? userId,
    required String? phone,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPhoneSession, [], {
              #userId: userId,
              #phone: phone,
            }),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#createPhoneSession, [], {
                  #userId: userId,
                  #phone: phone,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.Session> updatePhoneSession({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneSession, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i3.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updatePhoneSession, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Session>);

  @override
  _i6.Future<_i3.Session> getSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#getSession, [], {#sessionId: sessionId}),
            returnValue: _i6.Future<_i3.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#getSession, [], {#sessionId: sessionId}),
              ),
            ),
          )
          as _i6.Future<_i3.Session>);

  @override
  _i6.Future<_i3.Session> updateSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#updateSession, [], {#sessionId: sessionId}),
            returnValue: _i6.Future<_i3.Session>.value(
              _FakeSession_8(
                this,
                Invocation.method(#updateSession, [], {#sessionId: sessionId}),
              ),
            ),
          )
          as _i6.Future<_i3.Session>);

  @override
  _i6.Future<dynamic> deleteSession({required String? sessionId}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSession, [], {#sessionId: sessionId}),
            returnValue: _i6.Future<dynamic>.value(),
          )
          as _i6.Future<dynamic>);

  @override
  _i6.Future<_i3.User> updateStatus() =>
      (super.noSuchMethod(
            Invocation.method(#updateStatus, []),
            returnValue: _i6.Future<_i3.User>.value(
              _FakeUser_1(this, Invocation.method(#updateStatus, [])),
            ),
          )
          as _i6.Future<_i3.User>);

  @override
  _i6.Future<_i3.Token> createVerification({required String? url}) =>
      (super.noSuchMethod(
            Invocation.method(#createVerification, [], {#url: url}),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#createVerification, [], {#url: url}),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.Token> updateVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateVerification, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#updateVerification, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.Token> createPhoneVerification() =>
      (super.noSuchMethod(
            Invocation.method(#createPhoneVerification, []),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#createPhoneVerification, []),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);

  @override
  _i6.Future<_i3.Token> updatePhoneVerification({
    required String? userId,
    required String? secret,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePhoneVerification, [], {
              #userId: userId,
              #secret: secret,
            }),
            returnValue: _i6.Future<_i3.Token>.value(
              _FakeToken_6(
                this,
                Invocation.method(#updatePhoneVerification, [], {
                  #userId: userId,
                  #secret: secret,
                }),
              ),
            ),
          )
          as _i6.Future<_i3.Token>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i7.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i4.UserEntity> saveUser(_i4.UserEntity? user) =>
      (super.noSuchMethod(
            Invocation.method(#saveUser, [user]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(this, Invocation.method(#saveUser, [user])),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<_i4.UserEntity?> getUserById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [id]),
            returnValue: _i6.Future<_i4.UserEntity?>.value(),
          )
          as _i6.Future<_i4.UserEntity?>);

  @override
  _i6.Future<_i4.UserEntity> updateUser(_i4.UserEntity? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(this, Invocation.method(#updateUser, [user])),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<bool> deleteUser(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteUser, [id]),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<_i4.UserEntity> addRole(String? userId, String? role) =>
      (super.noSuchMethod(
            Invocation.method(#addRole, [userId, role]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(
                this,
                Invocation.method(#addRole, [userId, role]),
              ),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<_i4.UserEntity> removeRole(String? userId, String? role) =>
      (super.noSuchMethod(
            Invocation.method(#removeRole, [userId, role]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(
                this,
                Invocation.method(#removeRole, [userId, role]),
              ),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<_i4.UserEntity> updateDriverDetails(
    String? userId,
    _i4.DriverDetails? driverDetails,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDriverDetails, [userId, driverDetails]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(
                this,
                Invocation.method(#updateDriverDetails, [
                  userId,
                  driverDetails,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<_i4.UserEntity> updateClientDetails(
    String? userId,
    _i4.ClientDetails? clientDetails,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateClientDetails, [userId, clientDetails]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(
                this,
                Invocation.method(#updateClientDetails, [
                  userId,
                  clientDetails,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<_i4.UserEntity> updateDriverPosition(
    String? userId,
    double? latitude,
    double? longitude,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDriverPosition, [
              userId,
              latitude,
              longitude,
            ]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(
                this,
                Invocation.method(#updateDriverPosition, [
                  userId,
                  latitude,
                  longitude,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<_i4.UserEntity> updateDriverAvailability(
    String? userId,
    bool? isAvailable,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDriverAvailability, [userId, isAvailable]),
            returnValue: _i6.Future<_i4.UserEntity>.value(
              _FakeUserEntity_9(
                this,
                Invocation.method(#updateDriverAvailability, [
                  userId,
                  isAvailable,
                ]),
              ),
            ),
          )
          as _i6.Future<_i4.UserEntity>);

  @override
  _i6.Future<List<_i4.UserEntity>> getAvailableDrivers() =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableDrivers, []),
            returnValue: _i6.Future<List<_i4.UserEntity>>.value(
              <_i4.UserEntity>[],
            ),
          )
          as _i6.Future<List<_i4.UserEntity>>);
}

/// A class which mocks [SessionStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSessionStorage extends _i1.Mock implements _i8.SessionStorage {
  MockSessionStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> saveSession(String? sessionId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#saveSession, [sessionId, userId]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String?> getSessionId() =>
      (super.noSuchMethod(
            Invocation.method(#getSessionId, []),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<String?> getUserId() =>
      (super.noSuchMethod(
            Invocation.method(#getUserId, []),
            returnValue: _i6.Future<String?>.value(),
          )
          as _i6.Future<String?>);

  @override
  _i6.Future<void> clearSession() =>
      (super.noSuchMethod(
            Invocation.method(#clearSession, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> hasSession() =>
      (super.noSuchMethod(
            Invocation.method(#hasSession, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);
}
