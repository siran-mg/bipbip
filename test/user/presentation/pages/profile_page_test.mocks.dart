// Mocks generated by Mockito 5.4.5 from annotations
// in ndao/test/user/presentation/pages/profile_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:io' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:ndao/user/domain/entities/user_entity.dart' as _i4;
import 'package:ndao/user/domain/interactors/get_current_user_interactor.dart'
    as _i2;
import 'package:ndao/user/domain/interactors/upload_profile_photo_interactor.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GetCurrentUserInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentUserInteractor extends _i1.Mock
    implements _i2.GetCurrentUserInteractor {
  MockGetCurrentUserInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.UserEntity?> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue: _i3.Future<_i4.UserEntity?>.value(),
          )
          as _i3.Future<_i4.UserEntity?>);
}

/// A class which mocks [UploadProfilePhotoInteractor].
///
/// See the documentation for Mockito's code generation for more information.
class MockUploadProfilePhotoInteractor extends _i1.Mock
    implements _i5.UploadProfilePhotoInteractor {
  MockUploadProfilePhotoInteractor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> execute(String? userId, _i6.File? photoFile) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [userId, photoFile]),
            returnValue: _i3.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#execute, [userId, photoFile]),
              ),
            ),
          )
          as _i3.Future<String>);
}
